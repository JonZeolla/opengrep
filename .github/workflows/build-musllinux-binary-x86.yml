name: build-musllinux-binary-x86
on:
  workflow_call: null
  workflow_dispatch: null

jobs:

  build-self-contained-musllinux-binary:
    container: quay.io/pypa/musllinux_1_2_x86_64
    runs-on: ubuntu-latest
    steps:
      - run: |
          apk update
          apk add --no-cache zip python3 py3-pip py3-virtualenv python3-dev gcc musl-dev
          
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # NOTE: In fact both linux wheels should work.
      - uses: actions/download-artifact@v4
        with:
          name: musllinux-x86-wheel

      # - name: Install GitHub CLI
      #   run: |
      #     apk add --no-cache github-cli jq

      # - name: Authenticate GitHub CLI
      #   run: |
      #     echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      # - name: Get Latest Successful Run ID
      #   id: get-run-id
      #   run: |
      #     # Fetch the latest successful run ID for the workflow
      #     RUN_ID=$(gh run list --repo opengrep/opengrep --workflow build-test-core-x86 --status success --limit 1 --json databaseId --jq '.[0].databaseId')
      #     echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

      # - name: Output Run ID
      #   run: |
      #     echo "The latest successful run ID is: ${{ steps.get-run-id.outputs.run_id }}"

      # - name: Download Artifact
      #   run: |
      #     gh run download ${{ steps.get-run-id.outputs.run_id }} \
      #       -R opengrep/opengrep -n musllinux-x86-wheel

      - run: unzip dist.zip

      - name: Create venv
        run: |
          python3 -m venv venv

      - name: Install pyinstaller
        run: |
          . venv/bin/activate
          python3 -m pip install pyinstaller
      - name: Install package
        run: |
          . venv/bin/activate
          python3 -m pip install dist/*.whl --target ./_opengrepinstall

      - name: Create executable
        run: |
          . venv/bin/activate

          cp ./_opengrepinstall/semgrep/console_scripts/entrypoint.py \
             ./_opengrepinstall/semgrep/__main__.py

          # Package Opengrep using PyInstaller 

          python3 -m pip install --upgrade setuptools
          python3 -m pip install protobuf

          # install some dependencies for windows (pyinstaller only)
          python3 -m pip install chardet charset-normalizer
          
          cp cli/spec/opengrep.spec .

          pyinstaller opengrep.spec

      - name: Zip artifact
        run: zip -j opengrep.zip dist/opengrep
      
      - uses: actions/upload-artifact@v4
        with:
          name: opengrep_musllinux_binary_x86_64
          path: opengrep.zip

  test-musllinux-binary:
    needs: build-self-contained-musllinux-binary
    container: quay.io/pypa/musllinux_1_2_x86_64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: opengrep_musllinux_binary_x86_64
      - run: unzip opengrep.zip
      - run: chmod +x opengrep
      - run: |
          ./opengrep --version
      - run: |
          echo '1 == 1' | ./opengrep -l python -e '$X == $X' -
