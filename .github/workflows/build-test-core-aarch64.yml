name: build-test-core-aarch64
on:
  push:
    branches:
      - main
      - linux/**
    paths-ignore:
      - '**.md'
  workflow_call: null
  workflow_dispatch: null

jobs:

  build-core:
    strategy:
      matrix:
        ocaml_version: ["5.3.0"]
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Make checkout speedy
        run: git config --global fetch.parallel 50

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # ratchet:actions/checkout@v4
        with:
          submodules: true

      - name: Configure git safedir properly
        run: git config --global --add safe.directory $(pwd)

      - name: Set GHA cache for OPAM
        id: cache-opam-linux-aarch64
        uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # ratchet:actions/cache@v4
        with:
          key: ${{ runner.os }}-${{ runner.arch }}-v1-opam-${{ matrix.ocaml_version }}-${{ hashFiles('opam/*.opam') }}
          path: _opam
        
      - name: Set SHOULD_INIT_OPAM based on Cache
        if: steps.cache-opam-linux-aarch64.outputs.cache-hit == 'true'
        run: |
          echo "SHOULD_INIT_OPAM=false" >> $GITHUB_ENV

      - name: Run build inside container
        run: |
          docker run --rm \
            --volume ${{ github.workspace }}:/workspace \
            --env SHOULD_INIT_OPAM=${{ env.SHOULD_INIT_OPAM }} \
            --env OCAML_VERSION=${{ matrix.ocaml_version }} \
            --workdir /workspace \
            alpine:3.22 \
            sh -c \
            "chown -R root:root /workspace/_opam;
             ./scripts/workflow-build-inside-alpine-container.sh;
             chown -R $(id -u):$(id -g) /workspace/_opam"

      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # ratchet:actions/upload-artifact@v4
        with:
          name: opengrep-core-aarch64
          path: artifacts.tgz

  build-musllinux-aarch64:
    needs:
      - build-core
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Make checkout speedy
        run: git config --global fetch.parallel 50

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          submodules: true

      - uses: actions/download-artifact@b14cf4c92620c250e1c074ab0a5800e37df86765 # v4
        with:
          name: opengrep-core-aarch64

      - name: Build inside container
        run: |
          docker run --rm \
            --volume ${{ github.workspace }}:/workspace \
            --workdir /workspace \
            quay.io/pypa/musllinux_1_2_aarch64 \
            /bin/sh -c "
              apk update &&
              apk add --no-cache zip python3 py3-pip py3-virtualenv python3-dev gcc musl-dev &&
              tar xf artifacts.tgz &&
              cp artifacts/opengrep-core cli/src/semgrep/bin &&
              python3 -m venv venv &&
              . venv/bin/activate &&
              ./scripts/build-wheels.sh
            "

      - uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: musllinux-aarch64-wheel
          path: cli/dist.zip
  
  build-test-manylinux-aarch64:
    needs:
      - build-core
      # - build-musllinux-aarch64 # NOTE: This is not really necessary.
    uses: ./.github/workflows/build-test-manylinux.yml
    with:
      arch: aarch64
